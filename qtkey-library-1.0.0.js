(()=>{var e={138:(e,t,a)=>{let r=a(580);e.exports={webauthn:r}},580:e=>{const t=e=>{const t="==".slice(0,(4-e.length%4)%4),a=e.replace(/-/g,"+").replace(/_/g,"/")+t,r=atob(a),n=new ArrayBuffer(r.length),s=new Uint8Array(n);for(let e=0;e<r.length;e++)s[e]=r.charCodeAt(e);return n},a=e=>{const t=new Uint8Array(e);let a="";for(const e of t)a+=String.fromCharCode(e);return btoa(a).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")};e.exports={createCredentials:async function(e){console.log("QTKEY : get create credentials data",e);const r={challenge:t(e.challenge),rp:{name:e.rp.name,id:e.rp.id},user:{id:t(e.user.id),name:e.user.name,displayName:e.user.displayName},pubKeyCredParams:e.pubKeyCredParams,authenticatorSelection:e.authenticatorSelection};let n=await navigator.credentials.create({publicKey:r});console.log("QTKEY : success create credential");const s={data:{id:n.id,type:n.type,user_name:e.name,rawId:a(n.rawId),response:{clientDataJSON:a(n.response.clientDataJSON),attestationObject:a(n.response.attestationObject)}},device:e.device?e.device:null};return Promise.resolve(s)},getCredentials:async function(e){console.log("QTKEY : get credentials data",e);let r={challenge:t(e.challenge),userVerification:e.userVerification,rpId:e.rpId,allowCredentials:[...e.allowCredentials]};r.allowCredentials.forEach(((e,a,r)=>{e&&(r[a].id=t(e.id))}));let n=await navigator.credentials.get({publicKey:r});console.log("QTKEY : success get credential");const s={data:{id:n.id,type:n.type,authenticatorAttachment:n.authenticatorAttachment,rawId:a(n.rawId),response:{clientDataJSON:a(n.response.clientDataJSON),authenticatorData:a(n.response.authenticatorData),userHandle:a(n.response.userHandle),signature:a(n.response.signature)}},email:e.email};return Promise.resolve(s)}}}},t={},a=function a(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,a),s.exports}(138);window.qtkey=a})();